#!/bin/sh

TAG="$1"
CONF_DIR="/opt/etc/dnsmasq.d"
CONF="$CONF_DIR/90-vpn-domains.conf"
NOAAAA_CONF="$CONF_DIR/99-no-aaaa.conf"
SET4="vpn_domains"
TMP="/tmp/${TAG}.lst"
TMP_IPS="/tmp/${TAG}.ips"
DNSMASQ_SOCK="/opt/var/run/raygate-dnsmasq.sock"
TUN_PORT=9999
IFACE="__IFACE__"
IPSET_FILE="/opt/etc/vpn_domains.ipset"

if [ -z "$TAG" ]; then
  echo "Usage: $0 <domain|geosite-tag>"
  exit 1
fi

mkdir -p "$CONF_DIR"

# –°–æ–∑–¥–∞—ë–º ipset, –µ—Å–ª–∏ –Ω–µ—Ç
if ! ipset list "$SET4" >/dev/null 2>&1; then
  ipset create "$SET4" hash:ip
  echo "‚úî –°–æ–∑–¥–∞–Ω ipset $SET4"
fi

# –°–æ–∑–¥–∞—ë–º filter-aaaa, –µ—Å–ª–∏ –Ω–µ—Ç
if [ ! -f "$NOAAAA_CONF" ]; then
  echo "filter-aaaa" > "$NOAAAA_CONF"
  echo "‚úî –°–æ–∑–¥–∞–Ω $NOAAAA_CONF (filter-aaaa)"
fi

# –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ TMP
> "$TMP"
> "$TMP_IPS"

################################
# 1. Geosite
################################
GEOSITE_URL="https://raw.githubusercontent.com/v2fly/domain-list-community/master/data/${TAG}"
curl -sfL "$GEOSITE_URL" >> "$TMP" && echo "‚úî Geosite: –Ω–∞–π–¥–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–ª—è '$TAG'"

################################
# 2. crt.sh (SSL –ø–æ–¥–¥–æ–º–µ–Ω—ã)
################################
CRT_URL="https://crt.sh/?q=%25$TAG&output=json"
curl -s "$CRT_URL" \
  | grep -oE '"name_value":"[^"]+"' \
  | cut -d: -f2 | tr -d '"' \
  | sed 's/\\n/\n/g' >> "$TMP" \
  && echo "‚úî crt.sh: –ø–æ–¥–¥–æ–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"

################################
# 3. Passive DNS (hackertarget)
################################
HOSTSEARCH_URL="https://api.hackertarget.com/hostsearch/?q=$TAG"
curl -sfL "$HOSTSEARCH_URL" | cut -d, -f1 >> "$TMP" && echo "‚úî Passive DNS: –ø–æ–¥–¥–æ–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"

################################
# 4. Certspotter
################################
CERTSPOTTER_URL="https://api.certspotter.com/v1/issuances?domain=$TAG&include_subdomains=true&expand=dns_names"
curl -s "$CERTSPOTTER_URL" \
  | grep -oE '"dns_names":\[[^]]+\]' \
  | grep -oE '"[^"]+"' \
  | tr -d '"' >> "$TMP" \
  && echo "‚úî Certspotter: –ø–æ–¥–¥–æ–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"

################################
# 5. RapidDNS
################################
RAPID_URL="https://rapiddns.io/subdomain/$TAG?full=1"
curl -s "$RAPID_URL" | grep -oE '>[a-zA-Z0-9.-]+\.'$TAG'<' \
  | sed 's/[<>]//g' >> "$TMP" \
  && echo "‚úî RapidDNS: –ø–æ–¥–¥–æ–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"

################################
# 6. ThreatCrowd
################################
THREAT_URL="https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$TAG"
curl -s "$THREAT_URL" \
  | grep -oE '"domain":"[^"]+"' \
  | cut -d: -f2 | tr -d '"' >> "$TMP" \
  && echo "‚úî ThreatCrowd: –ø–æ–¥–¥–æ–º–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"

################################
# 7. –û—á–∏—Å—Ç–∫–∞ –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è (–ø–µ—Ä–≤–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫)
################################
sort -u "$TMP" \
  | tr '[:upper:]' '[:lower:]' \
  | sed 's/^\*\.//' \
  | sed 's/^\.\(.*\)/\1/' \
  | sed 's/\.$//' \
  | grep -Ev '(^$|localhost$|local$|localdomain$|invalid$|test$|example$)' \
  > "$TMP.clean"
mv "$TMP.clean" "$TMP"

################################
# 8. –†–µ–∑–æ–ª–≤–∏–º –ø–µ—Ä–≤–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ ‚Üí IP
################################
while read -r domain; do
  for ip in $(dig +tcp @127.0.0.1 -p 5354 "$domain" A +short +time=3 +tries=1); do
    echo "$ip" >> "$TMP_IPS"
    ipset add "$SET4" "$ip" 2>/dev/null || true
  done
done < "$TMP"

################################
# 9. ASN-–ø–æ–∏—Å–∫ –ø–æ IP ‚Üí –¥–æ–º–µ–Ω—ã
################################
ASN_TMP="/tmp/${TAG}.asn.domains"
> "$ASN_TMP"
for ip in $(sort -u "$TMP_IPS"); do
  ASN=$(whois -h whois.cymru.com " -v $ip" | awk 'NR>1 {print $1}' | tr -d ' ')
  [ -z "$ASN" ] && continue
  curl -s "https://api.hackertarget.com/aslookup/?q=AS$ASN" \
    | grep -Eo '[a-zA-Z0-9.-]+' \
    | grep -vE '^[0-9.]+$' >> "$ASN_TMP"
done

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ ASN –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
cat "$ASN_TMP" >> "$TMP"

################################
# 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ (–≤—Å–µ –¥–æ–º–µ–Ω—ã)
################################
sort -u "$TMP" \
  | tr '[:upper:]' '[:lower:]' \
  | sed 's/^\*\.//' \
  | sed 's/^\.\(.*\)/\1/' \
  | sed 's/\.$//' \
  | grep -Ev '(^$|localhost$|local$|localdomain$|invalid$|test$|example$)' \
  > "$TMP.clean"
mv "$TMP.clean" "$TMP"

################################
# 11. –ó–∞–ø–∏—Å—å –≤ dnsmasq.conf
################################
ADDED=0
touch "$CONF"
while read -r domain; do
  entry="ipset=/${domain}/${SET4}"
  grep -qxF "$entry" "$CONF" || { echo "$entry" >> "$CONF"; ADDED=$((ADDED+1)); }
done < "$TMP"
[ "$ADDED" -gt 0 ] && echo "‚úÖ –í dnsmasq –¥–æ–±–∞–≤–ª–µ–Ω–æ $ADDED –∑–∞–ø–∏—Å–µ–π"

# –ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ–º dnsmasq
pidof dnsmasq >/dev/null && kill -HUP "$(pidof dnsmasq)" && echo "üîÑ dnsmasq –ø–µ—Ä–µ—á–∏—Ç–∞–Ω"

################################
# 12. –†–µ–∑–æ–ª–≤–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º IP –≤ ipset
################################
while read -r domain; do
  for ip in $(dig +tcp @127.0.0.1 -p 5354 "$domain" A +short +time=3 +tries=1); do
    ipset add "$SET4" "$ip" 2>/dev/null || true
  done
done < "$TMP"

# –ß–∏—Å—Ç–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
rm -f "$TMP" "$TMP_IPS" "$ASN_TMP"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º ipset
ipset save "$SET4" > "$IPSET_FILE"
echo "üíæ IpSet —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $IPSET_FILE"
