name: Build RayGate IPK

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Normalize control and postinst
        run: |
          sed -i 's/\r$//' raygate/CONTROL/control
          sed -i 's/\r$//' raygate/CONTROL/postinst

      - name: Extract version from control
        id: get_version
        shell: bash
        run: |
          VERSION=$(grep -m1 -E '^[[:space:]]*Version:' raygate/CONTROL/control | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Prepare build directories
        run: |
          rm -rf build
          mkdir -p build/control build/data

      - name: Copy files into control and data
        run: |
          cp raygate/CONTROL/control build/control/
          cp raygate/CONTROL/postinst build/control/
          chmod 755 build/control/postinst
          cp -r raygate/opt/* build/data/

      - name: Build control.tar.gz and data.tar.gz
        run: |
          pushd build/control
          tar --numeric-owner --group=0 --owner=0 -czf ../control.tar.gz .
          popd
          pushd build/data
          tar --numeric-owner --group=0 --owner=0 -czf ../data.tar.gz .
          popd

      - name: Create debian-binary
        run: echo '2.0' > build/debian-binary

      - name: Assemble .ipk
        run: |
          pushd build
          tar -cf ../raygate_${VERSION}_all.ipk debian-binary control.tar.gz data.tar.gz
          popd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: raygate_${{ env.VERSION }}_all.ipk
          path: raygate_${{ env.VERSION }}_all.ipk

      - name: Create Release (only on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: raygate_${{ env.VERSION }}_all.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}